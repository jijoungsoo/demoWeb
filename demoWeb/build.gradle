plugins {
	id 'org.springframework.boot' version '2.5.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

/*
https://github.com/axboot/ax-boot-framework/tree/master/ax-boot-admin/src/main/java/com/chequer/axboot/admin/domain/user
내가 하려 했던 모든기능이 이미 구현되어있다.
*/

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {

    all*.exclude group: 'xml-apis', module: 'xml-apis'


	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation ('org.springframework.boot:spring-boot-starter-web'){
        exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
    }
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
		
	/*스프링 웹소캣*/
	implementation ('org.springframework.boot:spring-boot-starter-websocket'){
		exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
    }

	//implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'	//몽고db를 세션으로 쓸거야
	//implementation 'org.springframework.session:spring-session-data-mongodb'	//몽고db를 세션으로 쓸거야
	
	//implementation 'javax.servlet:jstl'
   	//implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'  --리눅스 서버 배포시 초기 4초 느림 현상 때문에 전환
	//implementation 'org.springframework.boot:spring-boot-starter-mustache'   --클라이언트에서양한 handerbar와 구분이 되지 않음.
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'	//기본적으로  페이지 inlucde 같은 기능이 됨.
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'		//asp.net 의 마스터 페이지처럼 layout을 잡고 싶을때 사용
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'	//thymeleaf 용 스프링시큐리티 태크 사용
	//implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

   	implementation 'org.springframework.boot:spring-boot-starter-security:2.5.3' /*패스워드 암호화 때문에 사용*/

	   // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
   implementation 'ch.qos.logback:logback-classic:1.2.3'



	/*외부 레디스 세션을 사용하기 위해*/
	//implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	//implementation 'org.springframework.session:spring-session-data-redis'
	
	implementation 'org.springframework.boot:spring-boot-starter-aop'  /*aop 를 써서 로그인이 안된걸 공통으로 걸러준다.*/
	
    //embedded-redis --로컬용 --- redis 서버를 띄우지 않아도 된다.   https://jojoldu.tistory.com/297
	/*spring 이랑 slf4j-simple이  중복 classpath가 되므로 제거해야한다.*/
	/*
    compile ('it.ozimov:embedded-redis:0.7.3') {  
		exclude group: "org.slf4j", module: "slf4j-simple"
	}
	*/
	
	implementation('org.apache.httpcomponents:httpclient:4.5.13')   /*외부api 호출을 위해서 */
	
	//implementation('org.springframework.security:spring-security-taglibs:5.4.2')   /*로그인 정보 jsp 출력을 위해 */
	/*
	compile group: 'org.zalando', name: 'logbook-spring-boot-starter', version: '2.4.1'  
	*/  /*restcontroller 로그 남기기 */
	
	implementation 'net.sf.ehcache:ehcache:2.10.6'  /*메뉴 프로그램 리스트 캐싱     
											  http://dveamer.github.io/backend/SpringCacheable.html
	*/
	
	compileOnly 'org.projectlombok:lombok:1.18.20'    ///docker에서  gradlew build에서 안되서 아래 것을 하나 더 추가했다.
	implementation 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	
	//developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	
	/*스프링 상태 모니터링
	/actuator  로 접근
	 */
	implementation "org.springframework.boot:spring-boot-starter-actuator:2.5.3"
	implementation 'de.codecentric:spring-boot-admin-starter-client:2.4.3'
	

	
	
	implementation 'org.webjars:webjars-locator-core:0.46'
	implementation 'org.webjars.bowergithub.sockjs:sockjs-client:1.5.0'
	implementation 'org.webjars:font-awesome:5.15.1'
	implementation 'org.webjars:stomp-websocket:2.3.3-1'
	implementation 'org.webjars:bootstrap:5.1.3'
	implementation 'org.webjars:jquery:3.5.1'
	implementation 'org.webjars:jquery-ui:1.12.1'
	
	/*js 배열복사 lodash*/
	implementation 'org.webjars:lodash:4.17.15'

	/*클라이언트 템플릿 엔진으로 handlebars  사용하자 javascript 로 ui를 편하게 그리고 싶어서 그런다.*/
	implementation 'org.webjars.bower:handlebars:4.7.6'
	
	/*excep upload*/
	implementation 'org.apache.poi:poi:5.0.0'
	implementation 'org.apache.poi:poi-ooxml:5.0.0'
	//compile group: 'org.apache.poi', name: 'poi', version: '5.0.0'
	//compile group: 'org.apache.poi', name: 'poi-ooxml', version: '5.0.0'

	implementation 'commons-io:commons-io:2.8.0'
	implementation 'org.apache.commons:commons-lang3:3.11'
	implementation 'com.github.drapostolos:type-parser:0.7.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.3'
	//compile group: 'commons-io', name: 'commons-io', version: '2.8.0'
	//compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
	//compile group: 'com.github.drapostolos', name: 'type-parser', version: '0.7.0'
	//compile group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.4.2'

	implementation "io.springfox:springfox-boot-starter:3.0.0"
	
	
	// https://mvnrepository.com/artifact/org.apache.poi/poi
	//compile group: 'org.apache.poi', name: 'poi', version: '5.0.0'



		//oauth2 로그인
	  implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:2.5.3'
	
	
	// https://mvnrepository.com/artifact/org.jsoup/jsoup
	//html 파서
	//https://offbyone.tistory.com/116
	//html태그를 제거하기위해서 쓰려고함 
	//https://java2020.com/q/hwprbhse
	// https://mvnrepository.com/artifact/org.jsoup/jsoup
	implementation "org.jsoup:jsoup:1.14.1"

	// https://mvnrepository.com/artifact/org.zalando/faux-pas
	implementation 'org.zalando:faux-pas:0.9.0'

	// https://mvnrepository.com/artifact/org.json/json
	//java.lang.NoClassDefFoundError: org/springframework/boot/configurationprocessor/json/JSONException,
	///https://seongbindb.tistory.com/134
	///  org.springframework.boot.configurationprocessor.json ==>org.json
	implementation group: 'org.json', name: 'json', version: '20210307'

// https://mvnrepository.com/artifact/org.springframework.plugin/spring-plugin-metadata
implementation 'org.springframework.plugin:spring-plugin-metadata:2.0.0.RELEASE'


//인증관련
// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'


	//세션  db스토리지 사용
	implementation 'org.springframework.session:spring-session-jdbc:2.5.2'
	//세션 db스토리지를 사용하기위해서는  spring-data-jdbc도 넣어줘야한다.
	implementation("org.springframework.data:spring-data-jdbc:2.2.5")
	//트랜잭션메니저 설정
	implementation("org.apache.tomcat:tomcat-jdbc:10.0.8")
	//db드라이버 설정
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.23'


    //데이터베이스 스키마 관리를 위해  liquibase 를 사용하자
    // https://mvnrepository.com/artifact/org.liquibase/liquibase-core
    //커멘드 명령어로 기존에 db에서   설정파일을 출력할수 있다.
    //https://www.liquibase.org/download 
    //D:\liquibase-4.5.0
    implementation 'org.liquibase:liquibase-core:4.5.0'

}

test {
	useJUnitPlatform()
}


compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

/*gradle로만 docker 띄우고 싶을때.
bootBuildImage{ 
  imageName='tailender'
}
*/

tasks.jar {
	//https://dongjuppp.tistory.com/87
    enabled = false
    // Remove `plain` postfix from jar file name
    archiveClassifier.set("")
}