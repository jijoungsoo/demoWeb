<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true">



  <appender name="ROLLING" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- rollover daily -->
      <fileNamePattern>c:/logs/apilog-%d{yyyy-MM-dd}.%i.txt2.zip</fileNamePattern>
      <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <!-- or whenever the file size reaches 100MB -->
        <maxFileSize>100MB</maxFileSize>
      </timeBasedFileNamingAndTriggeringPolicy>
    </rollingPolicy>
    <encoder>
      <pattern>%d{HH:mm:ss.SSS}-%green(%-5level)-%logger{36} - %msg%n</pattern>
    </encoder>
  </appender>

  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <layout class="ch.qos.logback.classic.PatternLayout">
    <!--  로그 출력정보 https://goddaehee.tistory.com/206 -->
      <Pattern>%d{HH:mm:ss.SSS}-%green(%-5level)-%logger{36} - %msg%n</Pattern>
    </layout>
  </appender>


  <appender name="FLOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- rollover daily -->
      <fileNamePattern>flonetd/flog-%d{yyyy-MM-dd}.txt.zip</fileNamePattern>

    </rollingPolicy>
    <encoder>

      <pattern>%5p [%d] %msg%n</pattern>
    </encoder>
  </appender>


  <!-- Loggers -->
  <logger name="org.springframework.core">
    <level value="info"/>

  </logger>
  <logger name="org.springframework.beans">
    <level value="info"/>

  </logger>
  <logger name="org.springframework.context">
    <level value="info"/>

  </logger>
  <logger name="org.springframework.web">
    <level value="info"/>

  </logger>
  <logger name="com.example.web">
    <level value="debug"/>

  </logger>
  <logger name="java.sql">
    <appender-ref ref="ROLLING"/>
    <appender-ref ref="STDOUT"/>
    <level value="info"/>

  </logger>


  <!-- SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. -->
  <logger name="jdbc.sqlonly" additivity="false">
    <appender-ref ref="ROLLING"/>
    <appender-ref ref="STDOUT"/>
    <level value="info"/>


  </logger>
  <!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
  <logger name="jdbc.sqltiming" additivity="false">
    <!--<appender-ref ref="ROLLING"/>-->
    <!--<appender-ref ref="STDOUT"/>-->
    <!--<level value="info"/>-->
  </logger>
  <logger name="jdbc.resultset" additivity="false">
    <!--<appender-ref ref="ROLLING"/>-->
    <!--<appender-ref ref="STDOUT"/>-->
    <!--<level value="info"/>-->

  </logger>
  <logger name="jdbc.resultsettable" additivity="false">
    <appender-ref ref="ROLLING"/>
    <appender-ref ref="STDOUT"/>
    <level value="debug"/>

  </logger>
  <logger name="jdbc.connection" additivity="false">
    <appender-ref ref="ROLLING"/>
    <level value="fetal"/>
  </logger>
  <logger name="jdbc.audit" additivity="false">
    <!--<appender-ref ref="ROLLING"/>-->
    <!--<appender-ref ref="STDOUT"/>-->
    <!--<level value="info"/>-->
  </logger>

  <logger name="flunetd"  additivity="false" >
    <appender-ref ref="FLOG"/>


    <level value="info"/>
  </logger>

  <root level="info">
    <appender-ref ref="ROLLING"/>
    <appender-ref ref="STDOUT"/>
  </root>
</configuration>

